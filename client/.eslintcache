[{"C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\index.tsx":"1","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\App.tsx":"3","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\Login.tsx":"4","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\FireBase\\config.ts":"5","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\TensorFlow\\testML.tsx":"6"},{"size":575,"mtime":1610573462414,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":3658,"mtime":1612013970402,"results":"10","hashOfConfig":"8"},{"size":2325,"mtime":1612020445102,"results":"11","hashOfConfig":"8"},{"size":553,"mtime":1611588075533,"results":"12","hashOfConfig":"8"},{"size":3020,"mtime":1612024182813,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1nyeoi",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":"22","usedDeprecatedRules":"17"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"17"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\index.tsx",["30","31","32"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["33","34"],"C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\App.tsx",["35","36","37","38","39","40","41"],"import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport ReactDOM from 'react-dom';\nimport Login from './Login'\nimport testML from './TensorFlow/testML'\nimport { db, client } from './FireBase/config'\nimport message from './model/Message'\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\ninterface Props {\n}\n\ninterface State {\n  message: message[],\n  isLogged: boolean\n}\n\n\nclass App extends Component<Props, State>{\n  constructor(prop: Props) {\n    super(prop);\n    if (!this.state?.message)\n      this.state = { message: [], isLogged: false };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:5000/booming-pride-283013/us-central1/app', {\n      credentials: 'include',\n    }).then(res => {\n      if (res.ok) {\n        client.auth().onAuthStateChanged(user => {\n          if (user) {\n            this.setState({ isLogged: true });\n            db.ref('notification'.concat('/', user.uid)).on('child_added', snap => {\n              const mail: message = snap.val();\n              if (!mail.isRead) {\n                this.setState({ message: [... this.state.message, mail] })\n              }\n            });\n            db.ref('notification'.concat('/', user.uid)).off('child_added', (snap) => {\n              const mail: message = snap.val();\n              if (!mail.isRead) {\n                this.setState({ message: [... this.state.message, mail] })\n              }\n            });\n            db.ref('notification'.concat('/', user.uid)).on('child_changed', snap => {\n              const mail: message = snap.val();\n              if (mail.isRead) {\n                const arr = this.state.message;\n                const newArr = arr.filter(mess => {\n                  return (mess.sendAt !== mail.sendAt);\n                })\n                this.setState({ message: newArr })\n              }\n            });\n            db.ref('notification'.concat('/', user.uid)).off('child_changed', (snap) => {\n              const mail: message = snap.val();\n              if (mail.isRead) {\n                const arr = this.state.message;\n                const newArr = arr.filter(mess => {\n                  return (mess.sendAt !== mail.sendAt);\n                })\n                this.setState({ message: newArr })\n              }\n            });\n\n            db.ref('notification'.concat('/', user.uid)).on('child_removed', snap => {\n              const mail: message = snap.val();\n              if (!mail.isRead) {\n                const arr = this.state.message;\n                const newArr = arr.filter(mess => {\n                  return mess !== mail;\n                })\n                this.setState({ message: newArr })\n              }\n            });\n\n            db.ref('notification'.concat('/', user.uid)).off('child_removed', snap => {\n              const mail: message = snap.val();\n              if (!mail.isRead) {\n                const arr = this.state.message;\n                const newArr = arr.filter(mess => {\n                  return mess !== mail;\n                })\n                this.setState({ message: newArr })\n              }\n            });\n          }\n        });\n      }\n    })\n\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.isLogged ?\n          (<div>\n            <div>there are {this.state.message.length} messages</div>\n            {this.state.message.map(m => <div>{!m.isRead ? m.message : ''}</div>)}\n          </div>) : <div></div>\n        }\n        <Route path='/login' component={Login}></Route>\n        <Route path='/testML' component={testML}></Route>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\Login.tsx",["42","43","44"],"import React, { ChangeEvent, Component } from 'react';\r\nimport firebase from 'firebase'\r\nimport { client, messaging } from './FireBase/config'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    uid: string,\r\n    idToken: string,\r\n    name: string,\r\n    isLoaded: boolean,\r\n    employeeId: string\r\n}\r\n\r\nclass Login extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = { idToken: '', isLoaded: false, uid: '', name: '', employeeId: '' }\r\n    }\r\n    componentDidMount() {\r\n        if (client) {\r\n            this.setState({ isLoaded: true })\r\n        }\r\n    }\r\n\r\n    googleSignIn = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        client.auth().signInWithPopup(provider).then(async result => {\r\n            this.setState({\r\n                idToken: await result.user?.getIdToken()!, name: result.user?.displayName!, uid: result.user?.uid!, employeeId: result.user?.email?.split('@')[0]!\r\n            });\r\n            fetch('http://localhost:5000/booming-pride-283013/us-central1/app/login', {\r\n                credentials: 'include',\r\n\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                },\r\n\r\n                method: 'POST',\r\n                body: JSON.stringify(this.state),\r\n            }).then(res => {\r\n                if (res.ok) {\r\n                    return res.json().then(result => {console.log(result)})\r\n                }\r\n                else {\r\n                    firebase.auth().currentUser?.delete();\r\n                    firebase.auth().signOut();\r\n                    return res.json().then(result => { throw Error(result.error) });\r\n                }\r\n            }).catch(e => {\r\n                firebase.auth().currentUser?.delete();\r\n                firebase.auth().signOut();\r\n                console.log(e);\r\n            });\r\n            event.preventDefault();\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoaded)\r\n            return (<div>\r\n                <button name=\"google sign in\" onClick={this.googleSignIn}>google sign in</button>\r\n            </div>)\r\n        else return (<div><h1>LOADING</h1></div>)\r\n    }\r\n}\r\nexport default Login","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\FireBase\\config.ts",[],"C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\TensorFlow\\testML.tsx",["45","46","47","48","49","50","51"],{"ruleId":"52","severity":1,"message":"53","line":8,"column":3,"nodeType":"54","messageId":"55","endLine":8,"endColumn":9},{"ruleId":"52","severity":1,"message":"56","line":9,"column":3,"nodeType":"54","messageId":"55","endLine":9,"endColumn":8},{"ruleId":"52","severity":1,"message":"57","line":10,"column":3,"nodeType":"54","messageId":"55","endLine":10,"endColumn":7},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"52","severity":1,"message":"62","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":12},{"ruleId":"52","severity":1,"message":"63","line":4,"column":8,"nodeType":"54","messageId":"55","endLine":4,"endColumn":16},{"ruleId":"52","severity":1,"message":"64","line":11,"column":20,"nodeType":"54","messageId":"55","endLine":11,"endColumn":26},{"ruleId":"52","severity":1,"message":"53","line":12,"column":3,"nodeType":"54","messageId":"55","endLine":12,"endColumn":9},{"ruleId":"52","severity":1,"message":"57","line":14,"column":3,"nodeType":"54","messageId":"55","endLine":14,"endColumn":7},{"ruleId":"65","severity":1,"message":"66","line":44,"column":46,"nodeType":"67","messageId":"68","endLine":44,"endColumn":47,"fix":"69"},{"ruleId":"65","severity":1,"message":"66","line":50,"column":46,"nodeType":"67","messageId":"68","endLine":50,"endColumn":47,"fix":"70"},{"ruleId":"52","severity":1,"message":"71","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":28},{"ruleId":"52","severity":1,"message":"72","line":3,"column":18,"nodeType":"54","messageId":"55","endLine":3,"endColumn":27},{"ruleId":"52","severity":1,"message":"73","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":18},{"ruleId":"52","severity":1,"message":"74","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":17},{"ruleId":"52","severity":1,"message":"71","line":2,"column":17,"nodeType":"54","messageId":"55","endLine":2,"endColumn":28},{"ruleId":"52","severity":1,"message":"75","line":2,"column":41,"nodeType":"54","messageId":"55","endLine":2,"endColumn":52},{"ruleId":"52","severity":1,"message":"76","line":2,"column":54,"nodeType":"54","messageId":"55","endLine":2,"endColumn":64},{"ruleId":"52","severity":1,"message":"77","line":3,"column":10,"nodeType":"54","messageId":"55","endLine":3,"endColumn":12},{"ruleId":"52","severity":1,"message":"78","line":3,"column":14,"nodeType":"54","messageId":"55","endLine":3,"endColumn":20},{"ruleId":"52","severity":1,"message":"79","line":4,"column":13,"nodeType":"54","messageId":"55","endLine":4,"endColumn":18},"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'logo' is defined but never used.","'ReactDOM' is defined but never used.","'Router' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"82","text":"83"},{"range":"84","text":"83"},"'ChangeEvent' is defined but never used.","'messaging' is defined but never used.","'Redirect' is defined but never used.","'waitFor' is defined but never used.","'useCallback' is defined but never used.","'useContext' is defined but never used.","'db' is defined but never used.","'client' is defined but never used.","'dgram' is defined but never used.","no-global-assign","no-unsafe-negation",[1135,1136],"",[1412,1413]]