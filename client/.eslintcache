[{"C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\index.tsx":"1","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\App.tsx":"3","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\Login.tsx":"4","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\FireBase\\config.ts":"5","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\TensorFlow\\testML.tsx":"6","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\TensorFlow\\socketContex.tsx":"7"},{"size":575,"mtime":1610573462414,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":3091,"mtime":1611652246032,"results":"11","hashOfConfig":"9"},{"size":2604,"mtime":1611588014619,"results":"12","hashOfConfig":"9"},{"size":553,"mtime":1611588075533,"results":"13","hashOfConfig":"9"},{"size":2638,"mtime":1611512408962,"results":"14","hashOfConfig":"9"},{"size":129,"mtime":1610575881379,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"1nyeoi",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"19"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\index.tsx",["34","35","36"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["37","38"],"C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\App.tsx",["39","40","41","42","43","44","45"],"C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\Login.tsx",["46"],"import React, { ChangeEvent, Component } from 'react';\r\nimport firebase from 'firebase'\r\nimport { client, messaging } from './FireBase/config'\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    uid: string,\r\n    idToken: string,\r\n    name: string,\r\n    isLoaded: boolean,\r\n    employeeId: string\r\n}\r\n\r\nclass Login extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = { idToken: '', isLoaded: false, uid: '', name: '', employeeId: '' }\r\n    }\r\n    componentDidMount() {\r\n        if (client) {\r\n            this.setState({ isLoaded: true })\r\n        }\r\n    }\r\n\r\n    googleSignIn = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        client.auth().signInWithPopup(provider).then(async result => {\r\n            this.setState({\r\n                idToken: await result.user?.getIdToken()!, name: result.user?.displayName!, uid: result.user?.uid!, employeeId: result.user?.email?.split('@')[0]!\r\n            });\r\n            fetch('http://localhost:5000/booming-pride-283013/us-central1/app/login', {\r\n                credentials: 'include',\r\n\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                },\r\n\r\n                method: 'POST',\r\n                body: JSON.stringify(this.state),\r\n            }).then(res => {\r\n                Notification.requestPermission().then(value => {\r\n                    messaging.getToken({ vapidKey: \"BEBvnGJooiNm5wM4kOtwbeNyjLaKhbaKPdS8vadKB5Ekq1YdXzLLNDMaNYpA0nmR-q8Glvl2r473vPZ9z1_OZvU\" }).then(token => {\r\n                        console.log(token);\r\n                    }).catch(e => { console.error(e) });\r\n                });\r\n                if (res.ok) {\r\n                    console.log(this.context.registerToken);\r\n                    return res.json().then(result => { console.log(result) });\r\n                }\r\n                else {\r\n                    firebase.auth().currentUser?.delete();\r\n                    return res.json().then(result => { throw Error(result.error) });\r\n                }\r\n            }).catch(e => {\r\n                firebase.auth().currentUser?.delete();\r\n                console.log(e);\r\n            });\r\n            event.preventDefault();\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoaded)\r\n            return (<div>\r\n                <button name=\"google sign in\" onClick={this.googleSignIn}>google sign in</button>\r\n            </div>)\r\n        else return (<div><h1>LOADING</h1></div>)\r\n    }\r\n}\r\nexport default Login","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\FireBase\\config.ts",[],"C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\TensorFlow\\testML.tsx",["47","48","49","50","51"],"import { waitFor } from '@testing-library/react';\r\nimport React, { ChangeEvent, Component, useCallback, useContext } from 'react';\r\nimport { db, client } from '../FireBase/config';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    error: string,\r\n    video: any,\r\n}\r\n\r\nclass testML extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = { error: \"\", video: null };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const video = document.getElementById('video') as HTMLVideoElement;\r\n        const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n        const $this = this;\r\n        navigator.mediaDevices.getUserMedia({ video: true }).then(stream => {\r\n            video.srcObject = stream;\r\n        }, e => {\r\n            console.log(e);\r\n            this.setState({ error: e.message! });\r\n        }).then(() => {\r\n            const ctx = canvas.getContext('2d');\r\n            video.addEventListener('play', (event) => {\r\n                function computeFrame() {\r\n                    ctx?.drawImage(video, 0, 0);\r\n                    $this.addToDB(canvas);\r\n                }\r\n                function step() {\r\n                    computeFrame();\r\n                    setTimeout(() => { requestAnimationFrame(step) }, 300);\r\n                }\r\n                requestAnimationFrame(step);\r\n            });\r\n        }).catch(e => {\r\n            video.pause();\r\n            video.currentTime = 0;\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    addToDB = async (canvas: HTMLCanvasElement) => {\r\n        if (canvas) {\r\n            if ((await db.ref('video/isDone').get()).val() !== false) {\r\n                await db.ref('video').update({\r\n                    isDone: false\r\n                })\r\n                await db.ref('video').update({\r\n                    frame: canvas.toDataURL(),\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        (document.getElementById('video') as HTMLVideoElement).pause();\r\n        (document.getElementById('video') as HTMLVideoElement).currentTime = 0;\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.error) {\r\n            return (\r\n                <div>\r\n                    <div id=\"container\">\r\n                        <video autoPlay={true} id=\"video\" width=\"480px\" height=\"640px\" hidden={true}>\r\n\r\n                        </video>\r\n                        <canvas id=\"canvas\" height=\"480\" width=\"640px\" />\r\n                    </div>\r\n                </div>);\r\n        }\r\n        else {\r\n            return (<div>LOADING</div>)\r\n        }\r\n    }\r\n}\r\nexport default testML","C:\\Users\\PHONG VU\\Desktop\\Client-FinalProject\\client\\src\\TensorFlow\\socketContex.tsx",["52"],{"ruleId":"53","severity":1,"message":"54","line":8,"column":3,"nodeType":"55","messageId":"56","endLine":8,"endColumn":9},{"ruleId":"53","severity":1,"message":"57","line":9,"column":3,"nodeType":"55","messageId":"56","endLine":9,"endColumn":8},{"ruleId":"53","severity":1,"message":"58","line":10,"column":3,"nodeType":"55","messageId":"56","endLine":10,"endColumn":7},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"53","severity":1,"message":"63","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":12},{"ruleId":"53","severity":1,"message":"64","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":16},{"ruleId":"53","severity":1,"message":"65","line":11,"column":20,"nodeType":"55","messageId":"56","endLine":11,"endColumn":26},{"ruleId":"53","severity":1,"message":"54","line":12,"column":3,"nodeType":"55","messageId":"56","endLine":12,"endColumn":9},{"ruleId":"53","severity":1,"message":"58","line":14,"column":3,"nodeType":"55","messageId":"56","endLine":14,"endColumn":7},{"ruleId":"66","severity":1,"message":"67","line":38,"column":42,"nodeType":"68","messageId":"69","endLine":38,"endColumn":43,"fix":"70"},{"ruleId":"66","severity":1,"message":"67","line":44,"column":42,"nodeType":"68","messageId":"69","endLine":44,"endColumn":43,"fix":"71"},{"ruleId":"53","severity":1,"message":"72","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":28},{"ruleId":"53","severity":1,"message":"73","line":1,"column":10,"nodeType":"55","messageId":"56","endLine":1,"endColumn":17},{"ruleId":"53","severity":1,"message":"72","line":2,"column":17,"nodeType":"55","messageId":"56","endLine":2,"endColumn":28},{"ruleId":"53","severity":1,"message":"74","line":2,"column":41,"nodeType":"55","messageId":"56","endLine":2,"endColumn":52},{"ruleId":"53","severity":1,"message":"75","line":2,"column":54,"nodeType":"55","messageId":"56","endLine":2,"endColumn":64},{"ruleId":"53","severity":1,"message":"76","line":3,"column":14,"nodeType":"55","messageId":"56","endLine":3,"endColumn":20},{"ruleId":"53","severity":1,"message":"77","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":13},"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["78"],"no-negated-in-lhs",["79"],"'logo' is defined but never used.","'ReactDOM' is defined but never used.","'Router' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"80","text":"81"},{"range":"82","text":"81"},"'ChangeEvent' is defined but never used.","'waitFor' is defined but never used.","'useCallback' is defined but never used.","'useContext' is defined but never used.","'client' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",[881,882],"",[1134,1135]]