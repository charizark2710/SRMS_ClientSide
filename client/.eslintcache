[{"C:\\Users\\PHONG VU\\Desktop\\SRMS_ClientSide\\client\\src\\index.tsx":"1","C:\\Users\\PHONG VU\\Desktop\\SRMS_ClientSide\\client\\src\\reportWebVitals.ts":"2","C:\\Users\\PHONG VU\\Desktop\\SRMS_ClientSide\\client\\src\\App.tsx":"3","C:\\Users\\PHONG VU\\Desktop\\SRMS_ClientSide\\client\\src\\FireBase\\config.ts":"4","C:\\Users\\PHONG VU\\Desktop\\SRMS_ClientSide\\client\\src\\Login.tsx":"5","C:\\Users\\PHONG VU\\Desktop\\SRMS_ClientSide\\client\\src\\TensorFlow\\testML.tsx":"6"},{"size":598,"mtime":1612535837308,"results":"7","hashOfConfig":"8"},{"size":440,"mtime":1612535441076,"results":"9","hashOfConfig":"8"},{"size":6581,"mtime":1612609115198,"results":"10","hashOfConfig":"8"},{"size":553,"mtime":1612535837306,"results":"11","hashOfConfig":"8"},{"size":2325,"mtime":1612535837307,"results":"12","hashOfConfig":"8"},{"size":2638,"mtime":1612535837308,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"1bzi48r",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"17"},"C:\\Users\\PHONG VU\\Desktop\\SRMS_ClientSide\\client\\src\\index.tsx",["30","31","32"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <Router>\r\n      <App />\r\n    </Router>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n",["33","34"],"C:\\Users\\PHONG VU\\Desktop\\SRMS_ClientSide\\client\\src\\reportWebVitals.ts",[],"C:\\Users\\PHONG VU\\Desktop\\SRMS_ClientSide\\client\\src\\App.tsx",["35","36","37","38","39","40","41"],"C:\\Users\\PHONG VU\\Desktop\\SRMS_ClientSide\\client\\src\\FireBase\\config.ts",[],"C:\\Users\\PHONG VU\\Desktop\\SRMS_ClientSide\\client\\src\\Login.tsx",["42","43","44"],"import React, { ChangeEvent, Component } from 'react';\r\nimport firebase from 'firebase'\r\nimport { client, messaging } from './FireBase/config'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    uid: string,\r\n    idToken: string,\r\n    name: string,\r\n    isLoaded: boolean,\r\n    employeeId: string\r\n}\r\n\r\nclass Login extends Component<Props, State> {\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = { idToken: '', isLoaded: false, uid: '', name: '', employeeId: '' }\r\n    }\r\n    componentDidMount() {\r\n        if (client) {\r\n            this.setState({ isLoaded: true })\r\n        }\r\n    }\r\n\r\n    googleSignIn = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        client.auth().signInWithPopup(provider).then(async result => {\r\n            this.setState({\r\n                idToken: await result.user?.getIdToken()!, name: result.user?.displayName!, uid: result.user?.uid!, employeeId: result.user?.email?.split('@')[0]!\r\n            });\r\n            fetch('http://localhost:5000/login', {\r\n                credentials: 'include',\r\n\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                },\r\n\r\n                method: 'POST',\r\n                body: JSON.stringify(this.state),\r\n            }).then(res => {\r\n                if (res.ok) {\r\n                    return res.json().then(result => {console.log(result)})\r\n                }\r\n                else {\r\n                    firebase.auth().currentUser?.delete();\r\n                    firebase.auth().signOut();\r\n                    return res.json().then(result => { throw Error(result.error) });\r\n                }\r\n            }).catch(e => {\r\n                firebase.auth().currentUser?.delete();\r\n                firebase.auth().signOut();\r\n                console.log(e);\r\n            });\r\n            event.preventDefault();\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoaded)\r\n            return (<div>\r\n                <button name=\"google sign in\" onClick={this.googleSignIn}>google sign in</button>\r\n            </div>)\r\n        else return (<div><h1>LOADING</h1></div>)\r\n    }\r\n}\r\nexport default Login","C:\\Users\\PHONG VU\\Desktop\\SRMS_ClientSide\\client\\src\\TensorFlow\\testML.tsx",["45","46","47","48","49"],"import { waitFor } from '@testing-library/react';\r\nimport React, { ChangeEvent, Component, useCallback, useContext } from 'react';\r\nimport { db, client } from '../FireBase/config';\r\n\r\ninterface Props {\r\n}\r\n\r\ninterface State {\r\n    error: string,\r\n    video: any,\r\n}\r\n\r\nclass testML extends Component<Props, State> {\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n        this.state = { error: \"\", video: null };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const video = document.getElementById('video') as HTMLVideoElement;\r\n        const canvas = document.getElementById('canvas') as HTMLCanvasElement;\r\n        const $this = this;\r\n        navigator.mediaDevices.getUserMedia({ video: true }).then(stream => {\r\n            video.srcObject = stream;\r\n        }, e => {\r\n            console.log(e);\r\n            this.setState({ error: e.message! });\r\n        }).then(() => {\r\n            const ctx = canvas.getContext('2d');\r\n            video.addEventListener('play', (event) => {\r\n                function computeFrame() {\r\n                    ctx?.drawImage(video, 0, 0);\r\n                    $this.addToDB(canvas);\r\n                }\r\n                function step() {\r\n                    computeFrame();\r\n                    setTimeout(() => { requestAnimationFrame(step) }, 300);\r\n                }\r\n                requestAnimationFrame(step);\r\n            });\r\n        }).catch(e => {\r\n            video.pause();\r\n            video.currentTime = 0;\r\n            console.log(e);\r\n        });\r\n    }\r\n\r\n    addToDB = async (canvas: HTMLCanvasElement) => {\r\n        if (canvas) {\r\n            if ((await db.ref('video/isDone').get()).val() !== false) {\r\n                await db.ref('video').update({\r\n                    isDone: false\r\n                })\r\n                await db.ref('video').update({\r\n                    frame: canvas.toDataURL(),\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        (document.getElementById('video') as HTMLVideoElement).pause();\r\n        (document.getElementById('video') as HTMLVideoElement).currentTime = 0;\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.error) {\r\n            return (\r\n                <div>\r\n                    <div id=\"container\">\r\n                        <video autoPlay={true} id=\"video\" width=\"480px\" height=\"640px\" hidden={true}>\r\n\r\n                        </video>\r\n                        <canvas id=\"canvas\" height=\"480\" width=\"640px\" />\r\n                    </div>\r\n                </div>);\r\n        }\r\n        else {\r\n            return (<div>LOADING</div>)\r\n        }\r\n    }\r\n}\r\nexport default testML",{"ruleId":"50","severity":1,"message":"51","line":8,"column":3,"nodeType":"52","messageId":"53","endLine":8,"endColumn":9},{"ruleId":"50","severity":1,"message":"54","line":9,"column":3,"nodeType":"52","messageId":"53","endLine":9,"endColumn":8},{"ruleId":"50","severity":1,"message":"55","line":10,"column":3,"nodeType":"52","messageId":"53","endLine":10,"endColumn":7},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"50","severity":1,"message":"60","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":12},{"ruleId":"50","severity":1,"message":"61","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":16},{"ruleId":"50","severity":1,"message":"62","line":12,"column":20,"nodeType":"52","messageId":"53","endLine":12,"endColumn":26},{"ruleId":"50","severity":1,"message":"51","line":13,"column":3,"nodeType":"52","messageId":"53","endLine":13,"endColumn":9},{"ruleId":"50","severity":1,"message":"55","line":15,"column":3,"nodeType":"52","messageId":"53","endLine":15,"endColumn":7},{"ruleId":"63","severity":1,"message":"64","line":53,"column":46,"nodeType":"65","messageId":"66","endLine":53,"endColumn":47,"fix":"67"},{"ruleId":"63","severity":1,"message":"64","line":59,"column":46,"nodeType":"65","messageId":"66","endLine":59,"endColumn":47,"fix":"68"},{"ruleId":"50","severity":1,"message":"69","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":28},{"ruleId":"50","severity":1,"message":"70","line":3,"column":18,"nodeType":"52","messageId":"53","endLine":3,"endColumn":27},{"ruleId":"50","severity":1,"message":"71","line":4,"column":10,"nodeType":"52","messageId":"53","endLine":4,"endColumn":18},{"ruleId":"50","severity":1,"message":"72","line":1,"column":10,"nodeType":"52","messageId":"53","endLine":1,"endColumn":17},{"ruleId":"50","severity":1,"message":"69","line":2,"column":17,"nodeType":"52","messageId":"53","endLine":2,"endColumn":28},{"ruleId":"50","severity":1,"message":"73","line":2,"column":41,"nodeType":"52","messageId":"53","endLine":2,"endColumn":52},{"ruleId":"50","severity":1,"message":"74","line":2,"column":54,"nodeType":"52","messageId":"53","endLine":2,"endColumn":64},{"ruleId":"50","severity":1,"message":"75","line":3,"column":14,"nodeType":"52","messageId":"53","endLine":3,"endColumn":20},"@typescript-eslint/no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","no-native-reassign",["76"],"no-negated-in-lhs",["77"],"'logo' is defined but never used.","'ReactDOM' is defined but never used.","'Router' is defined but never used.","rest-spread-spacing","Unexpected whitespace after spread operator.","SpreadElement","unexpectedWhitespace",{"range":"78","text":"79"},{"range":"80","text":"79"},"'ChangeEvent' is defined but never used.","'messaging' is defined but never used.","'Redirect' is defined but never used.","'waitFor' is defined but never used.","'useCallback' is defined but never used.","'useContext' is defined but never used.","'client' is defined but never used.","no-global-assign","no-unsafe-negation",[1510,1511],"",[1794,1795]]